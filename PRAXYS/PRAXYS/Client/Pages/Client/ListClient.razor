@page "/clients/list"
@inject NavigationManager navigarionManager
@inject HttpClient Http
@inject IJSRuntime js


<div class="row">
    <div class="col-12 d-flex justify-content-between align-items-center">
        <h4 class="mat-h4">Lista de Clientes</h4>
        <a class="btn btn-blue waves-effect waves-light" href="clients/create">
            <span class="btn-label">
                <i class="fas fa-plus"></i>
            </span>
            Agregar Cliente
        </a>
    </div>
</div>

<div class="card mat-elevation-z4 border-top border-blue ">
    <div class="card-body">
        @if (Clients == null)
        {
            <div class="d-flex justify-content-center">
                <div class="spinner-grow avatar-lg text-secondary m-2 text-center" role="status"></div>
            </div>
        }
        else if (Clients.Count == 0)
        {
            <p>No existen registros que mostrar</p>
        }
        else
        {
            <table class="table table-hover border-blue border table-responsive-lg" id="datable-init">
                <thead class="bg-blue text-white">
                    <tr>
                        <th scope="col">Nombre o Razon Social</th>
                        <th scope="col">Telefono</th>
                        <th scope="col">Correo</th>
                        <th scope="col">Acciones</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Clients)
                    {
                        <tr>
                            @if (item.PersonType == "Fisica")
                            {
                                <td>@(item.Name + " " + item.LastName + " " + item.SecondLastName)</td>
                            }
                            else if (item.PersonType == "Moral")
                            {
                                <td><span>@item.CompanyName</span></td>
                            }
                            <td>@item.PhoneNumber</td>
                            <td>@item.Email</td>
                            <td>
                                <a href="clients/edit/@item.ID" class="btn btn-blue waves-effect waves-light"><i class="far fa-edit"></i></a>
                                <div class="btn-group">
                                    <button type="button" class="btn btn-blue dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">Opciones <i class="mdi mdi-chevron-down"></i></button>
                                    <div class="dropdown-menu">
                                        <a class="dropdown-item" href="clients/details/@item.ID">Ver Cliente</a>
                                        <a class="dropdown-item" @onclick="@(() => Delete(item.ID))">Eliminar</a>
                                    </div>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        }
    </div>
</div>

@code {
    [Parameter] public EventCallback<int> OnDblClick { get; set; }

    private List<ClientModel> Clients;
    private bool Opened;

    protected override async Task OnInitializedAsync()
    {
        Clients = await Http.GetJsonAsync<List<ClientModel>>("api/clients");
    }

    private async void Delete(int id)
    {
        var result = await js.ConfirmMessage("Antes de continuar", "Esta seguro de querer eliminar el registro");
        if (result)
        {
            await Http.DeleteAsync($"api/clients/{id}");
            //Clients = await Http.GetJsonAsync<List<ClientModel>>("api/clients");
            await js.Message("Exito", "Se ha Eliminado el registro", "success");
            await js.Reload();
        }

        StateHasChanged();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await js.DataTableInit();
        }
    }
}
